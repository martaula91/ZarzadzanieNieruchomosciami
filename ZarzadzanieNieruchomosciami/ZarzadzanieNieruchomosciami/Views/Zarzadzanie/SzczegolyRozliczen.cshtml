@model ZarzadzanieNieruchomosciami.Models.Rozliczenie
@using ZarzadzanieNieruchomosciami.Infrastructure

@{
    ViewBag.Title = "SzczegolyRozliczen";
    Layout = "~/Views/Shared/_LayoutStart.cshtml";
}

<script type="text/javascript" src="@Url.Content("/Scripts/Chart.js")"></script>

<h2 class="manageHeader">Informacje o opłatach @Model.Nazwa</h2>

<table id="lokale">
    <tr class="header">
        <td>Przedmiot opłaty</td>
        <td>Jednostka naliczenia</td>
        <td></td>
        <td> Cena jednostkowa </td>
        <td>  </td>
        <td> Koszt </td>
    </tr>
    <tr class="local">
        <td>Centralne ogrzewanie:</td>
        <td>@Model.Lokal.PowierzchniaLokalu m2</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaCentralneOgrzewanie zł</td>
        <td> = </td>
        <td>@Model.CentralneOgrzewanie zł</td>
    </tr>
    <tr class="local">
        <td>Zimna woda + ścieki:</td>
        <td>@Model.Lokal.LiczbaWodyZimnej m3</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaZWiSC zł</td>
        <td> = </td>
        <td>@Model.ZWiSCLicznik zł</td>
    </tr>
    <tr class="local">
        <td>Woda ciepła licznik:</td>
        <td>@Model.Lokal.LiczbaWodyCieplej m3</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaCW zł</td>
        <td> = </td>
        <td>@Model.CWLicznik zł</td>
    </tr>
    <tr class="local">
        <td>Energia elektryczna:</td>
        <td>@Model.Lokal.PowierzchniaLokalu m2</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaEnergiaElekCzescWspolna zł</td>
        <td> = </td>
        <td>@Model.EnergiaElekCzescWspolna zł</td>
    </tr>
    <tr class="local">
        <td>Wywóz śmieci:</td>
        <td>@Model.Lokal.LiczbaLokatorow osoba/osoby</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaWywozSmieci zł</td>
        <td> = </td>
        <td>@Model.WywozSmieci zł</td>
    </tr>
    <tr class="local">
        <td>Koszty administrowania:</td>
        <td>@Model.Lokal.PowierzchniaLokalu m2</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaKosztyAdministrowania zł</td>
        <td> = </td>
        <td>@Model.KosztyAdministrowania zł</td>
    </tr>
    <tr class="local">
        <td>Koszty obslugi bankowej i ubezp. :</td>
        <td>@Model.Lokal.PowierzchniaLokalu m2</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaKosztyObslugiBankUbezp zł</td>
        <td> = </td>
        <td>@Model.KosztyObslugiBankUbezp zł</td>
    </tr>

    <tr class="local">
        <td>Fundusz Remontowy :</td>
        <td>@Model.Lokal.PowierzchniaLokalu m2</td>
        <td>*</td>
        <td>@Model.Stawka.StawkaFunduszRemontowy zł</td>
        <td> = </td>
        <td>@Model.FunduszRemontowy zł</td>
    </tr>



</table>

 Ogołem do zapłaty :  @Model.OgolemDoZaplaty zł<br />
stan na dzień @Model.StanNaDzien to :  @Model.StanObecny zł  (zawiera w sobie rozliczenie wody)

<hr />
Miesięczną opłate należy uiszczać do 10-go każdego miesiąca za bieżący miesiąc na rachunek bankowy:<br />
PKO BP 58 1010 1333 0000 1202 1096 5582<br />

@*Saldo na dzien 31.12.2018r. zawiera w sobie rozliczenie wody<br />*@

@if (User.Identity.IsAuthenticated && User.IsInRole("Employee"))
{
    <a href="@Url.Action("DodajRozliczenie", "Manage", new { rozliczenieId = @Model.RozliczenieId })" style="margin-top: 20px; font-weight: bold; display: block;">
        Edytuj
    </a>
}

<div style="margin-top: 20px">
    <canvas id="canvasWykres"></canvas>
</div>

<script>
    @{
        var sum = Model.CentralneOgrzewanie + Model.ZWiSCLicznik
            + Model.CWLicznik + Model.EnergiaElekCzescWspolna + Model.WywozSmieci + Model.KosztyAdministrowania + Model.KosztyObslugiBankUbezp
            + Model.FunduszRemontowy;
    }
    var daneDoWykresu = {
        labels: [
            'Centralne ogrzewanie @Model.CentralneOgrzewanie zł (@(Math.Round((double)@Model.CentralneOgrzewanie / sum * 100))%)',
            'Zimna woda + ścieki @Model.ZWiSCLicznik zł (@(Math.Round((double)@Model.ZWiSCLicznik / sum * 100))%)',
            'Woda ciepła licznik @Model.CWLicznik zł (@(Math.Round((double)@Model.CWLicznik / sum * 100))%)',
            'Energia elektryczna @Model.EnergiaElekCzescWspolna zł (@(Math.Round((double)@Model.EnergiaElekCzescWspolna / sum * 100))%)',
            'Wywóz śmieci @Model.WywozSmieci zł (@(Math.Round((double)@Model.WywozSmieci / sum * 100))%)',
            'Koszty administrowania @Model.KosztyAdministrowania zł (@(Math.Round((double)@Model.KosztyAdministrowania / sum * 100))%)',
            'Koszty obslugi bankowej i ubezp. @Model.KosztyObslugiBankUbezp zł (@(Math.Round((double)@Model.KosztyObslugiBankUbezp / sum * 100))%)',
            'Fundusz Remontowy @Model.FunduszRemontowy zł (@(Math.Round((double)@Model.FunduszRemontowy / sum * 100))%)'
            ],
        datasets: [{
            backgroundColor: [
                'rgb(54, 162, 235)',
                'rgb(255, 99, 132)',
                'rgb(255, 159, 64)',
                'rgb(75, 192, 192)',
                'rgb(153, 102, 255)',
                'rgb(201, 203, 207)',
                'rgb(148, 139, 61)',
                'rgb(100, 100, 100)'
            ],
            data: [
                @Model.CentralneOgrzewanie.ToString().Replace(',', '.'),
                @Model.ZWiSCLicznik.ToString().Replace(',', '.'),
                @Model.CWLicznik.ToString().Replace(',', '.'),
                @Model.EnergiaElekCzescWspolna.ToString().Replace(',', '.'),
                @Model.WywozSmieci.ToString().Replace(',', '.'),
                @Model.KosztyAdministrowania.ToString().Replace(',', '.'),
                @Model.KosztyObslugiBankUbezp.ToString().Replace(',', '.'),
                @Model.FunduszRemontowy.ToString().Replace(',', '.')
            ]
        }]
    };

    window.onload = function () {
        var ctx = document.getElementById('canvasWykres').getContext('2d');
        window.myHorizontalBar = new Chart(ctx, {
            type: 'pie',
            data: daneDoWykresu,
            options: {
                responsive: true,
                legend: {
                    display: true,
                    position: 'right'
                },
                title: {
                    display: false,
                },
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            return data.labels[tooltipItem.index];
                        }
                    }
                },
            },
        });
    };
</script>
